module prj_por(
	input              CLK,
	input              RST,
	//----------------------------
	input      [15: 0] MIX_DATI,
	input      [15: 0] MIX_DATQ,
	//----------------------------
	output reg         DDC_DOE,
	output reg [15: 0] DDC_DATI,
	output reg [15: 0] DDC_DATQ
);

wire         CicDatOe;
wire [111:0] CicDatWI;
wire [111:0] CicDatWQ;

reg          CicDatOr;
reg  [15: 0] CicDatRI;
reg  [15: 0] CicDatRQ;

wire         FirDatOe;
wire [33: 0] FirDataI;
wire [33: 0] FirDataQ;

cic_core inst_cic_core_i(
	.clk                ( CLK      ),
	.reset_n            ( !RST     ),
	//-----------------------------------
	.rate               ( 13'd4000 ),
	//-----------------------------------
	.in_valid           ( 1'b1     ),
	.in_data            ( MIX_DATI ),
	//-----------------------------------
	.out_valid          ( CicDatOe ),
	.out_data           ( CicDatWI )
);

cic_core inst_cic_core_q(
	.clk                ( CLK      ),
	.reset_n            ( !RST     ),
	//-----------------------------------
	.rate               ( 13'd4000 ),
	//-----------------------------------
	.in_valid           ( 1'b1     ),
	.in_data            ( MIX_DATQ ),
	//-----------------------------------
	.out_valid          ( ),
	.out_data           ( CicDatWQ )
);

always@(posedge CLK,posedge RST)begin
	if(RST)begin
		CicDatOr     <= 1'b0;
		CicDatRI     <= 16'd0;
		CicDatRQ     <= 16'd0;
	end else begin
		CicDatOr     <= CicDatOe;
		CicDatRI     <= CicDatWI[80:65] + CicDatWI[64];
		CicDatRQ     <= CicDatWQ[80:65] + CicDatWQ[64];
	end
end

fir_core inst_fir_core_i(
	.clk                ( CLK      ),
	.reset_n            ( !RST     ),
	//----------------------------------
	.ast_sink_valid     ( CicDatOr ),
	.ast_sink_data      ( CicDatRI ),
	//----------------------------------
	.ast_source_valid   ( FirDatOe ),
	.ast_source_data    ( FirDataI )
);

fir_core inst_fir_core_q(
	.clk                ( CLK      ),
	.reset_n            ( !RST     ),
	//----------------------------------
	.ast_sink_valid     ( CicDatOr ),
	.ast_sink_data      ( CicDatRQ ),
	//----------------------------------
	.ast_source_valid   ( ),
	.ast_source_data    ( FirDataQ )
);

always@(posedge CLK,posedge RST)begin
	if(RST)begin
		DDC_DOE       <= 1'b0;
		DDC_DATI      <= 16'd0;
		DDC_DATQ      <= 16'd0;
	end else begin
		DDC_DOE       <= FirDatOe;
		DDC_DATI      <= FirDataI[32:17] + FirDataI[16];
		DDC_DATQ      <= FirDataQ[32:17] + FirDataQ[16];
	end
end

endmodule
